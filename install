#!/bin/sh

# Used on 22.04.1 LTS (Jammy Jellyfish)
# Meant to be used with a sudoed user (it will setup things globally and for the user)

set -x

if [ "$(id -u)" != "0" ]; then
  echo "You need to launch this script with sudo"
  exit 1
fi

if [ "$(id -u -n)" = "$(logname)" ]; then
  echo "You need to launch this script with sudo and not as root"
  exit 1
fi

if ! [ -r /etc/os-release ]; then
    echo "/etc/os-release file cannot be read"
    exit 1
fi

if ! grep 'ID=ubuntu' /etc/os-release >/dev/null; then
  echo "This script is meant to be executed on Ubuntu"
  exit 1
fi

USERNAME="$(logname)"

# apt packages
apt-get update
apt-get install -y \
  acpi \
  build-essential \
  bzip2 \
  clang \
  clang-tidy \
  clang-tools \
  cppcheck \
  curl \
  exfat-fuse \
  fd-find \
  feh \
  ffmpeg \
  flake8 \
  git \
  jq \
  keepassxc \
  lftp \
  lua-check \
  mariadb-client \
  mpv \
  net-tools \
  nodejs \
  npm \
  patchelf \
  php \
  php-codesniffer \
  python3-pip \
  python3-venv \
  rclone \
  restic \
  ripgrep \
  rsync \
  shellcheck \
  socat \
  sockstat \
  sqlite3 \
  sshuttle \
  syncthing \
  sysstat \
  tmux \
  tree \
  universal-ctags \
  unzip \
  urlscan \
  vim \
  w3m \
  wl-clipboard \
  xdg-desktop-portal-dev \
  xdg-desktop-portal-gnome \
  xdg-desktop-portal-gtk \
  yamllint \
  yarnpkg

# packages under evaluation
# sway swaylock
# kitty
# dmenu
# xwayland
# network-manager
# libwayland-egl1

# snaps
cat <<EOF | xargs -n1 snap install
chromium
firefox
gimp
libreoffice
signal-desktop
EOF

# lxd
snap install lxd

# docker
snap install docker

# check if the snap partition is using zfs, change the storage-driver accordingly
if df -hT | awk '/\/var\/snap/ {print $2}' | grep zfs >/dev/null
then
cat <<EOF > /var/snap/docker/current/config/daemon.json
{
  "storage-driver": "zfs",
  "log-level": "error"
}
EOF
fi

# microk8s
snap install --classic microk8s
mkdir -p "/home/$USERNAME/.kube"
usermod -a -G microk8s "$USERNAME"
chown -f -R "$USERNAME" "/home/$USERNAME/.kube"
snap alias microk8s.kubectl kubectl

# pip
cat <<EOF | xargs -I{} su "$USERNAME" sh -c 'pip install --user {}'
ansible-lint
black
flake8
gita
mypy
pylint
pynvim
python-lsp-server[all]
ranger-fm
yt-dlp
EOF

# npm
su "$USERNAME" sh -c 'npm config set prefix ~/.local'
cat <<EOF | xargs -I{} su "$USERNAME" sh -c 'npm install --force -g {}'
dockerfile-language-server-nodejs
eslint
markdownlint-cli
pyright
typescript
typescript-language-server
yaml-language-server
EOF

# rustup
su "$USERNAME" sh -c 'curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable --profile default -y --no-modify-path'

# cargo
cat <<EOF | xargs -I{} su "$USERNAME" sh -c '~/.cargo/bin/cargo install {}'
bandwhich
bat
du-dust
exa
fd-find
git-delta
ripgrep
tokei
xsv
EOF

# neovim
curl -L https://github.com/neovim/neovim/releases/latest/download/nvim.appimage --create-dirs -o /usr/local/bin/nvim
chmod +x /usr/local/bin/nvim

# yt-dlp
curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o "/usr/local/bin/yt-dlp"
chmod +x /usr/local/bin/yt-dlp

# helix
curl -Ls https://github.com/helix-editor/helix/releases/download/22.08.1/helix-22.08.1-x86_64.AppImage -o /usr/local/bin/hx
chmod +x /usr/local/bin/hx

# age

# mSBC for sony wh-1000xm4
# https://www.redpill-linpro.com/techblog/2021/05/31/better-bluetooth-headset-audio-with-msbc.html
mkdir -p /etc/pipewire/media-session.d
echo "properties = {bluez5.msbc-support = true}" > /etc/pipewire/media-session.d/bluez-monitor.conf
# systemctl restart pipewire

# amdgpu
# https://github.com/RadeonOpenCompute/ROCm/issues/1730
# https://amdgpu-install.readthedocs.io/en/latest/install-prereq.html
curl -L "https://repo.radeon.com/amdgpu-install/22.20/ubuntu/jammy/amdgpu-install_22.20.50200-1_all.deb" -o /tmp/amdgpu-install.deb
apt-get install -y "/tmp/amdgpu-install.deb"
rm -rf "/tmp/amdgpu-install.deb"
# https://askubuntu.com/a/1424178/1624582
amdgpu-install --usecase=opencl,graphics -y

# handle trackpad issues when awakening from S3 sleep
# (I don't use the touchpad)
# https://askubuntu.com/questions/1235067/touchpad-stopped-working-20-04
echo "options psmouse proto=imps" > /etc/modprobe.d/psmouse.conf

# aerc
apt install -y golang scdoc
mkdir -p /tmp/aerc
cd /tmp/aerc || exit
curl -Ls https://git.sr.ht/~rjarry/aerc/archive/0.13.0.tar.gz | tar xz --strip 1
make
make install
rm -rf /tmp/aerc
